# This file was auto-generated by /Users/vogels/dev/domtree/generate_stubs.py.

from typing import overload, Callable, Dict, List, Any, Optional, Union, Generator
from domtree.node import Node

class A(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/a
    """
    @overload
    def __call__(
        self,
        *,
        href = None,
        target = None,
        xlink__href = None,
        **attrs,
    ) -> "A":  # type: ignore
        """
        `<a href target xlink:href />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/a)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <!-- A link around a shape -->
          <a href="/docs/Web/SVG/Element/circle">
            <circle cx="50" cy="40" r="35"/>
          </a>

          <!-- A link around a text -->
          <a href="/docs/Web/SVG/Element/text">
            <text x="50" y="90" text-anchor="middle">
              &lt;circle&gt;
            </text>
          </a>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "A":  # type: ignore
        """
        `<a href target xlink:href />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/a)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <!-- A link around a shape -->
          <a href="/docs/Web/SVG/Element/circle">
            <circle cx="50" cy="40" r="35"/>
          </a>

          <!-- A link around a text -->
          <a href="/docs/Web/SVG/Element/text">
            <text x="50" y="90" text-anchor="middle">
              &lt;circle&gt;
            </text>
          </a>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "A":  # type: ignore
        pass


a: A = Node("a")  # type: ignore


class Altglyph(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/altGlyph
    """
    @overload
    def __call__(
        self,
        *,
        x = None,
        y = None,
        dx = None,
        dy = None,
        rotate = None,
        glyphRef = None,
        format = None,
        xlink__href = None,
        **attrs,
    ) -> "Altglyph":  # type: ignore
        """
        `<altGlyph x y dx dy rotate glyphRef format xlink:href />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/altGlyph)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Altglyph":  # type: ignore
        """
        `<altGlyph x y dx dy rotate glyphRef format xlink:href />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/altGlyph)
        """

    def __call__(*args, **kwargs) -> "Altglyph":  # type: ignore
        pass


altGlyph: Altglyph = Node("altGlyph")  # type: ignore


class Altglyphdef(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/altGlyphDef
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Altglyphdef":  # type: ignore
        """
        `<altGlyphDef />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/altGlyphDef)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Altglyphdef":  # type: ignore
        """
        `<altGlyphDef />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/altGlyphDef)
        """

    def __call__(*args, **kwargs) -> "Altglyphdef":  # type: ignore
        pass


altGlyphDef: Altglyphdef = Node("altGlyphDef")  # type: ignore


class Altglyphitem(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/altGlyphItem
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Altglyphitem":  # type: ignore
        """
        `<altGlyphItem />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/altGlyphItem)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Altglyphitem":  # type: ignore
        """
        `<altGlyphItem />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/altGlyphItem)
        """

    def __call__(*args, **kwargs) -> "Altglyphitem":  # type: ignore
        pass


altGlyphItem: Altglyphitem = Node("altGlyphItem")  # type: ignore


class Animate(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animate
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Animate":  # type: ignore
        """
        `<animate />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animate)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg">
          <rect width="10" height="10">
            <animate attributeName="rx" values="0;5;0" dur="10s" repeatCount="indefinite" />
          </rect>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Animate":  # type: ignore
        """
        `<animate />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animate)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg">
          <rect width="10" height="10">
            <animate attributeName="rx" values="0;5;0" dur="10s" repeatCount="indefinite" />
          </rect>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Animate":  # type: ignore
        pass


animate: Animate = Node("animate")  # type: ignore


class Animatecolor(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateColor
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Animatecolor":  # type: ignore
        """
        `<animateColor />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateColor)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Animatecolor":  # type: ignore
        """
        `<animateColor />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateColor)
        """

    def __call__(*args, **kwargs) -> "Animatecolor":  # type: ignore
        pass


animateColor: Animatecolor = Node("animateColor")  # type: ignore


class Animatemotion(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateMotion
    """
    @overload
    def __call__(
        self,
        *,
        keyPoints = None,
        path = None,
        rotate = None,
        **attrs,
    ) -> "Animatemotion":  # type: ignore
        """
        `<animateMotion keyPoints path rotate />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateMotion)
        

        Example:
        ```
        <svg viewBox="0 0 200 100" xmlns="http://www.w3.org/2000/svg">
          <path fill="none" stroke="lightgrey"
            d="M20,50 C20,-50 180,150 180,50 C180-50 20,150 20,50 z" />

          <circle r="5" fill="red">
            <animateMotion dur="10s" repeatCount="indefinite"
              path="M20,50 C20,-50 180,150 180,50 C180-50 20,150 20,50 z" />
          </circle>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Animatemotion":  # type: ignore
        """
        `<animateMotion keyPoints path rotate />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateMotion)
        

        Example:
        ```
        <svg viewBox="0 0 200 100" xmlns="http://www.w3.org/2000/svg">
          <path fill="none" stroke="lightgrey"
            d="M20,50 C20,-50 180,150 180,50 C180-50 20,150 20,50 z" />

          <circle r="5" fill="red">
            <animateMotion dur="10s" repeatCount="indefinite"
              path="M20,50 C20,-50 180,150 180,50 C180-50 20,150 20,50 z" />
          </circle>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Animatemotion":  # type: ignore
        pass


animateMotion: Animatemotion = Node("animateMotion")  # type: ignore


class Animatetransform(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateTransform
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Animatetransform":  # type: ignore
        """
        `<animateTransform />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateTransform)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Animatetransform":  # type: ignore
        """
        `<animateTransform />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/animateTransform)
        """

    def __call__(*args, **kwargs) -> "Animatetransform":  # type: ignore
        pass


animateTransform: Animatetransform = Node("animateTransform")  # type: ignore


class Circle(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle
    """
    @overload
    def __call__(
        self,
        *,
        cx = None,
        cy = None,
        r = None,
        pathLength = None,
        **attrs,
    ) -> "Circle":  # type: ignore
        """
        `<circle cx cy r pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <circle cx="50" cy="50" r="50"/>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Circle":  # type: ignore
        """
        `<circle cx cy r pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/circle)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <circle cx="50" cy="50" r="50"/>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Circle":  # type: ignore
        pass


circle: Circle = Node("circle")  # type: ignore


class Clippath(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/clipPath
    """
    @overload
    def __call__(
        self,
        *,
        clipPathUnits = None,
        **attrs,
    ) -> "Clippath":  # type: ignore
        """
        `<clipPath clipPathUnits />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/clipPath)
        

        Example:
        ```
        <svg viewBox="0 0 100 100">
          <clipPath id="myClip">
            <!--
              Everything outside the circle will be
              clipped and therefore invisible.
            -->
            <circle cx="40" cy="35" r="35" />
          </clipPath>

          <!-- The original black heart, for reference -->
          <path id="heart" d="M10,30 A20,20,0,0,1,50,30 A20,20,0,0,1,90,30 Q90,60,50,90 Q10,60,10,30 Z" />

          <!--
            Only the portion of the red heart
            inside the clip circle is visible.
          -->
          <use clip-path="url(#myClip)" href="#heart" fill="red" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Clippath":  # type: ignore
        """
        `<clipPath clipPathUnits />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/clipPath)
        

        Example:
        ```
        <svg viewBox="0 0 100 100">
          <clipPath id="myClip">
            <!--
              Everything outside the circle will be
              clipped and therefore invisible.
            -->
            <circle cx="40" cy="35" r="35" />
          </clipPath>

          <!-- The original black heart, for reference -->
          <path id="heart" d="M10,30 A20,20,0,0,1,50,30 A20,20,0,0,1,90,30 Q90,60,50,90 Q10,60,10,30 Z" />

          <!--
            Only the portion of the red heart
            inside the clip circle is visible.
          -->
          <use clip-path="url(#myClip)" href="#heart" fill="red" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Clippath":  # type: ignore
        pass


clipPath: Clippath = Node("clipPath")  # type: ignore


class Cursor(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/cursor
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Cursor":  # type: ignore
        """
        `<cursor />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/cursor)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Cursor":  # type: ignore
        """
        `<cursor />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/cursor)
        """

    def __call__(*args, **kwargs) -> "Cursor":  # type: ignore
        pass


cursor: Cursor = Node("cursor")  # type: ignore


class Defs(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/defs
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Defs":  # type: ignore
        """
        `<defs />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/defs)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg">
          <!-- Some graphical objects to use -->
          <defs>
            <circle id="myCircle" cx="0" cy="0" r="5" />

            <linearGradient id="myGradient" gradientTransform="rotate(90)">
              <stop offset="20%" stop-color="gold" />
              <stop offset="90%" stop-color="red" />
            </linearGradient>
          </defs>

          <!-- using my graphical objects -->
          <use x="5" y="5" href="#myCircle" fill="url('#myGradient')" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Defs":  # type: ignore
        """
        `<defs />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/defs)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg">
          <!-- Some graphical objects to use -->
          <defs>
            <circle id="myCircle" cx="0" cy="0" r="5" />

            <linearGradient id="myGradient" gradientTransform="rotate(90)">
              <stop offset="20%" stop-color="gold" />
              <stop offset="90%" stop-color="red" />
            </linearGradient>
          </defs>

          <!-- using my graphical objects -->
          <use x="5" y="5" href="#myCircle" fill="url('#myGradient')" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Defs":  # type: ignore
        pass


defs: Defs = Node("defs")  # type: ignore


class Desc(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/desc
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Desc":  # type: ignore
        """
        `<desc />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/desc)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg">
          <circle cx="5" cy="5" r="4">
            <desc>
              I'm a circle and that description is here to
              demonstrate how I can be described, but is it
              really necessary to describe a simple circle
              like me?
            </desc>
          </circle>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Desc":  # type: ignore
        """
        `<desc />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/desc)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg">
          <circle cx="5" cy="5" r="4">
            <desc>
              I'm a circle and that description is here to
              demonstrate how I can be described, but is it
              really necessary to describe a simple circle
              like me?
            </desc>
          </circle>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Desc":  # type: ignore
        pass


desc: Desc = Node("desc")  # type: ignore


class Discard(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/discard
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Discard":  # type: ignore
        """
        `<discard />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/discard)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Discard":  # type: ignore
        """
        `<discard />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/discard)
        """

    def __call__(*args, **kwargs) -> "Discard":  # type: ignore
        pass


discard: Discard = Node("discard")  # type: ignore


class Ellipse(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse
    """
    @overload
    def __call__(
        self,
        *,
        cx = None,
        cy = None,
        rx = None,
        ry = None,
        pathLength = None,
        **attrs,
    ) -> "Ellipse":  # type: ignore
        """
        `<ellipse cx cy rx ry pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse)
        

        Example:
        ```
        <svg viewBox="0 0 200 100" xmlns="http://www.w3.org/2000/svg">
          <ellipse cx="100" cy="50" rx="100" ry="50" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Ellipse":  # type: ignore
        """
        `<ellipse cx cy rx ry pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/ellipse)
        

        Example:
        ```
        <svg viewBox="0 0 200 100" xmlns="http://www.w3.org/2000/svg">
          <ellipse cx="100" cy="50" rx="100" ry="50" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Ellipse":  # type: ignore
        pass


ellipse: Ellipse = Node("ellipse")  # type: ignore


class Feblend(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feBlend
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Feblend":  # type: ignore
        """
        `<feBlend />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feBlend)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Feblend":  # type: ignore
        """
        `<feBlend />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feBlend)
        """

    def __call__(*args, **kwargs) -> "Feblend":  # type: ignore
        pass


feBlend: Feblend = Node("feBlend")  # type: ignore


class Fecolormatrix(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feColorMatrix
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fecolormatrix":  # type: ignore
        """
        `<feColorMatrix />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feColorMatrix)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fecolormatrix":  # type: ignore
        """
        `<feColorMatrix />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feColorMatrix)
        """

    def __call__(*args, **kwargs) -> "Fecolormatrix":  # type: ignore
        pass


feColorMatrix: Fecolormatrix = Node("feColorMatrix")  # type: ignore


class Fecomponenttransfer(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feComponentTransfer
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fecomponenttransfer":  # type: ignore
        """
        `<feComponentTransfer />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feComponentTransfer)
        

        Example:
        ```
        rect {
          fill: url(#rainbow);
        }
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fecomponenttransfer":  # type: ignore
        """
        `<feComponentTransfer />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feComponentTransfer)
        

        Example:
        ```
        rect {
          fill: url(#rainbow);
        }
        ```
        """

    def __call__(*args, **kwargs) -> "Fecomponenttransfer":  # type: ignore
        pass


feComponentTransfer: Fecomponenttransfer = Node("feComponentTransfer")  # type: ignore


class Fecomposite(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feComposite
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fecomposite":  # type: ignore
        """
        `<feComposite />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feComposite)
        

        Example:
        ```
        <svg style="width:800px; height:400px; display: inline;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
            <filter id="imageOver">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="over"/>
            </filter>
            <filter id="imageIn">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="in"/>
            </filter>
            <filter id="imageOut">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="out"/>
            </filter>
            <filter id="imageAtop">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="atop"/>
            </filter>
            <filter id="imageXor">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="xor"/>
            </filter>
            <filter id="imageArithmetic">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="arithmetic" k1="0.1" k2="0.2" k3="0.3" k4="0.4" />
            </filter>
            <filter id="imageLighter">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="lighter"/>
            </filter>
          </defs>
          <g transform="translate(0,25)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageOver)"/>
            <text x="80" y="-5">over</text>
          </g>
          <g transform="translate(200,25)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageIn)"/>
            <text x="80" y="-5">in</text>
          </g>
          <g transform="translate(400,25)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageOut)"/>
            <text x="80" y="-5">out</text>
          </g>
          <g transform="translate(600,25)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageAtop)"/>
            <text x="80" y="-5">atop</text>
          </g>
          <g transform="translate(0,240)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageXor)"/>
            <text x="80" y="-5">xor</text>
          </g>
          <g transform="translate(200,240)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageArithmetic)"/>
            <text x="70" y="-5">arithmetic</text>
          </g>
          <g transform="translate(400,240)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageLighter)"/>
            <text x="80" y="-5">lighter</text>
          </g>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fecomposite":  # type: ignore
        """
        `<feComposite />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feComposite)
        

        Example:
        ```
        <svg style="width:800px; height:400px; display: inline;" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
            <filter id="imageOver">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="over"/>
            </filter>
            <filter id="imageIn">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="in"/>
            </filter>
            <filter id="imageOut">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="out"/>
            </filter>
            <filter id="imageAtop">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="atop"/>
            </filter>
            <filter id="imageXor">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="xor"/>
            </filter>
            <filter id="imageArithmetic">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="arithmetic" k1="0.1" k2="0.2" k3="0.3" k4="0.4" />
            </filter>
            <filter id="imageLighter">
              <feImage xlink:href="mdn_logo_only_color.png" x="10px" y="10px" width="160px" />
              <feComposite in2="SourceGraphic" operator="lighter"/>
            </filter>
          </defs>
          <g transform="translate(0,25)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageOver)"/>
            <text x="80" y="-5">over</text>
          </g>
          <g transform="translate(200,25)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageIn)"/>
            <text x="80" y="-5">in</text>
          </g>
          <g transform="translate(400,25)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageOut)"/>
            <text x="80" y="-5">out</text>
          </g>
          <g transform="translate(600,25)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageAtop)"/>
            <text x="80" y="-5">atop</text>
          </g>
          <g transform="translate(0,240)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageXor)"/>
            <text x="80" y="-5">xor</text>
          </g>
          <g transform="translate(200,240)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageArithmetic)"/>
            <text x="70" y="-5">arithmetic</text>
          </g>
          <g transform="translate(400,240)">
            <circle cx="90px" cy="80px" r="70px" fill="#c00" style="filter:url(#imageLighter)"/>
            <text x="80" y="-5">lighter</text>
          </g>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Fecomposite":  # type: ignore
        pass


feComposite: Fecomposite = Node("feComposite")  # type: ignore


class Feconvolvematrix(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feConvolveMatrix
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Feconvolvematrix":  # type: ignore
        """
        `<feConvolveMatrix />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feConvolveMatrix)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Feconvolvematrix":  # type: ignore
        """
        `<feConvolveMatrix />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feConvolveMatrix)
        """

    def __call__(*args, **kwargs) -> "Feconvolvematrix":  # type: ignore
        pass


feConvolveMatrix: Feconvolvematrix = Node("feConvolveMatrix")  # type: ignore


class Fediffuselighting(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDiffuseLighting
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fediffuselighting":  # type: ignore
        """
        `<feDiffuseLighting />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDiffuseLighting)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fediffuselighting":  # type: ignore
        """
        `<feDiffuseLighting />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDiffuseLighting)
        """

    def __call__(*args, **kwargs) -> "Fediffuselighting":  # type: ignore
        pass


feDiffuseLighting: Fediffuselighting = Node("feDiffuseLighting")  # type: ignore


class Fedisplacementmap(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDisplacementMap
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fedisplacementmap":  # type: ignore
        """
        `<feDisplacementMap />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDisplacementMap)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fedisplacementmap":  # type: ignore
        """
        `<feDisplacementMap />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDisplacementMap)
        """

    def __call__(*args, **kwargs) -> "Fedisplacementmap":  # type: ignore
        pass


feDisplacementMap: Fedisplacementmap = Node("feDisplacementMap")  # type: ignore


class Fedistantlight(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDistantLight
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fedistantlight":  # type: ignore
        """
        `<feDistantLight />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDistantLight)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fedistantlight":  # type: ignore
        """
        `<feDistantLight />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDistantLight)
        """

    def __call__(*args, **kwargs) -> "Fedistantlight":  # type: ignore
        pass


feDistantLight: Fedistantlight = Node("feDistantLight")  # type: ignore


class Fedropshadow(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDropShadow
    """
    @overload
    def __call__(
        self,
        *,
        dx = None,
        dy = None,
        stdDeviation = None,
        **attrs,
    ) -> "Fedropshadow":  # type: ignore
        """
        `<feDropShadow dx dy stdDeviation />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDropShadow)
        

        Example:
        ```
        <svg viewBox="0 0 30 10" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <filter id="shadow">
              <feDropShadow dx="0.2" dy="0.4" stdDeviation="0.2"/>
            </filter>
            <filter id="shadow2">
              <feDropShadow dx="0" dy="0" stdDeviation="0.5"
                  flood-color="cyan"/>
            </filter>
            <filter id="shadow3">
              <feDropShadow dx="-0.8" dy="-0.8" stdDeviation="0"
                  flood-color="pink" flood-opacity="0.5"/>
            </filter>
          </defs>

          <circle cx="5" cy="50%" r="4"
              style="fill:pink; filter:url(#shadow);"/>

          <circle cx="15" cy="50%" r="4"
              style="fill:pink; filter:url(#shadow2);"/>

          <circle cx="25" cy="50%" r="4"
              style="fill:pink; filter:url(#shadow3);"/>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fedropshadow":  # type: ignore
        """
        `<feDropShadow dx dy stdDeviation />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feDropShadow)
        

        Example:
        ```
        <svg viewBox="0 0 30 10" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <filter id="shadow">
              <feDropShadow dx="0.2" dy="0.4" stdDeviation="0.2"/>
            </filter>
            <filter id="shadow2">
              <feDropShadow dx="0" dy="0" stdDeviation="0.5"
                  flood-color="cyan"/>
            </filter>
            <filter id="shadow3">
              <feDropShadow dx="-0.8" dy="-0.8" stdDeviation="0"
                  flood-color="pink" flood-opacity="0.5"/>
            </filter>
          </defs>

          <circle cx="5" cy="50%" r="4"
              style="fill:pink; filter:url(#shadow);"/>

          <circle cx="15" cy="50%" r="4"
              style="fill:pink; filter:url(#shadow2);"/>

          <circle cx="25" cy="50%" r="4"
              style="fill:pink; filter:url(#shadow3);"/>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Fedropshadow":  # type: ignore
        pass


feDropShadow: Fedropshadow = Node("feDropShadow")  # type: ignore


class Feflood(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFlood
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Feflood":  # type: ignore
        """
        `<feFlood />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFlood)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Feflood":  # type: ignore
        """
        `<feFlood />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFlood)
        """

    def __call__(*args, **kwargs) -> "Feflood":  # type: ignore
        pass


feFlood: Feflood = Node("feFlood")  # type: ignore


class Fefunca(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncA
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fefunca":  # type: ignore
        """
        `<feFuncA />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncA)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fefunca":  # type: ignore
        """
        `<feFuncA />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncA)
        """

    def __call__(*args, **kwargs) -> "Fefunca":  # type: ignore
        pass


feFuncA: Fefunca = Node("feFuncA")  # type: ignore


class Fefuncb(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncB
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fefuncb":  # type: ignore
        """
        `<feFuncB />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncB)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fefuncb":  # type: ignore
        """
        `<feFuncB />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncB)
        """

    def __call__(*args, **kwargs) -> "Fefuncb":  # type: ignore
        pass


feFuncB: Fefuncb = Node("feFuncB")  # type: ignore


class Fefuncg(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncG
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fefuncg":  # type: ignore
        """
        `<feFuncG />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncG)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fefuncg":  # type: ignore
        """
        `<feFuncG />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncG)
        """

    def __call__(*args, **kwargs) -> "Fefuncg":  # type: ignore
        pass


feFuncG: Fefuncg = Node("feFuncG")  # type: ignore


class Fefuncr(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncR
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fefuncr":  # type: ignore
        """
        `<feFuncR />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncR)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fefuncr":  # type: ignore
        """
        `<feFuncR />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feFuncR)
        """

    def __call__(*args, **kwargs) -> "Fefuncr":  # type: ignore
        pass


feFuncR: Fefuncr = Node("feFuncR")  # type: ignore


class Fegaussianblur(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feGaussianBlur
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fegaussianblur":  # type: ignore
        """
        `<feGaussianBlur />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feGaussianBlur)
        

        Example:
        ```
        <svg width="120" height="120"
         xmlns="http://www.w3.org/2000/svg"
         xmlns:xlink="http://www.w3.org/1999/xlink">

          <filter id="dropShadow">
            <feGaussianBlur in="SourceAlpha" stdDeviation="3" />
            <feOffset dx="2" dy="4" />
            <feMerge>
                <feMergeNode />
                <feMergeNode in="SourceGraphic" />
            </feMerge>
          </filter>

          <circle cx="60"  cy="60" r="50" fill="green"
                  filter="url(#dropShadow)" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fegaussianblur":  # type: ignore
        """
        `<feGaussianBlur />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feGaussianBlur)
        

        Example:
        ```
        <svg width="120" height="120"
         xmlns="http://www.w3.org/2000/svg"
         xmlns:xlink="http://www.w3.org/1999/xlink">

          <filter id="dropShadow">
            <feGaussianBlur in="SourceAlpha" stdDeviation="3" />
            <feOffset dx="2" dy="4" />
            <feMerge>
                <feMergeNode />
                <feMergeNode in="SourceGraphic" />
            </feMerge>
          </filter>

          <circle cx="60"  cy="60" r="50" fill="green"
                  filter="url(#dropShadow)" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Fegaussianblur":  # type: ignore
        pass


feGaussianBlur: Fegaussianblur = Node("feGaussianBlur")  # type: ignore


class Feimage(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feImage
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Feimage":  # type: ignore
        """
        `<feImage />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feImage)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Feimage":  # type: ignore
        """
        `<feImage />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feImage)
        """

    def __call__(*args, **kwargs) -> "Feimage":  # type: ignore
        pass


feImage: Feimage = Node("feImage")  # type: ignore


class Femerge(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feMerge
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Femerge":  # type: ignore
        """
        `<feMerge />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feMerge)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Femerge":  # type: ignore
        """
        `<feMerge />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feMerge)
        """

    def __call__(*args, **kwargs) -> "Femerge":  # type: ignore
        pass


feMerge: Femerge = Node("feMerge")  # type: ignore


class Femergenode(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feMergeNode
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Femergenode":  # type: ignore
        """
        `<feMergeNode />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feMergeNode)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Femergenode":  # type: ignore
        """
        `<feMergeNode />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feMergeNode)
        """

    def __call__(*args, **kwargs) -> "Femergenode":  # type: ignore
        pass


feMergeNode: Femergenode = Node("feMergeNode")  # type: ignore


class Femorphology(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feMorphology
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Femorphology":  # type: ignore
        """
        `<feMorphology />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feMorphology)
        

        Example:
        ```
        text {
          font-family: Arial, Helvetica, sans-serif;
          font-size: 3em;
        }

        #thin {
          filter: url(#erode);
        }

        #thick {
          filter: url(#dilate);
        }
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Femorphology":  # type: ignore
        """
        `<feMorphology />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feMorphology)
        

        Example:
        ```
        text {
          font-family: Arial, Helvetica, sans-serif;
          font-size: 3em;
        }

        #thin {
          filter: url(#erode);
        }

        #thick {
          filter: url(#dilate);
        }
        ```
        """

    def __call__(*args, **kwargs) -> "Femorphology":  # type: ignore
        pass


feMorphology: Femorphology = Node("feMorphology")  # type: ignore


class Feoffset(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feOffset
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Feoffset":  # type: ignore
        """
        `<feOffset />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feOffset)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Feoffset":  # type: ignore
        """
        `<feOffset />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feOffset)
        """

    def __call__(*args, **kwargs) -> "Feoffset":  # type: ignore
        pass


feOffset: Feoffset = Node("feOffset")  # type: ignore


class Fepointlight(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/fePointLight
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fepointlight":  # type: ignore
        """
        `<fePointLight />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/fePointLight)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fepointlight":  # type: ignore
        """
        `<fePointLight />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/fePointLight)
        """

    def __call__(*args, **kwargs) -> "Fepointlight":  # type: ignore
        pass


fePointLight: Fepointlight = Node("fePointLight")  # type: ignore


class Fespecularlighting(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feSpecularLighting
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fespecularlighting":  # type: ignore
        """
        `<feSpecularLighting />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feSpecularLighting)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fespecularlighting":  # type: ignore
        """
        `<feSpecularLighting />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feSpecularLighting)
        """

    def __call__(*args, **kwargs) -> "Fespecularlighting":  # type: ignore
        pass


feSpecularLighting: Fespecularlighting = Node("feSpecularLighting")  # type: ignore


class Fespotlight(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feSpotLight
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fespotlight":  # type: ignore
        """
        `<feSpotLight />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feSpotLight)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fespotlight":  # type: ignore
        """
        `<feSpotLight />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feSpotLight)
        """

    def __call__(*args, **kwargs) -> "Fespotlight":  # type: ignore
        pass


feSpotLight: Fespotlight = Node("feSpotLight")  # type: ignore


class Fetile(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feTile
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Fetile":  # type: ignore
        """
        `<feTile />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feTile)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Fetile":  # type: ignore
        """
        `<feTile />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feTile)
        """

    def __call__(*args, **kwargs) -> "Fetile":  # type: ignore
        pass


feTile: Fetile = Node("feTile")  # type: ignore


class Feturbulence(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feTurbulence
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Feturbulence":  # type: ignore
        """
        `<feTurbulence />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feTurbulence)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Feturbulence":  # type: ignore
        """
        `<feTurbulence />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/feTurbulence)
        """

    def __call__(*args, **kwargs) -> "Feturbulence":  # type: ignore
        pass


feTurbulence: Feturbulence = Node("feTurbulence")  # type: ignore


class Filter(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/filter
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Filter":  # type: ignore
        """
        `<filter />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/filter)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Filter":  # type: ignore
        """
        `<filter />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/filter)
        """

    def __call__(*args, **kwargs) -> "Filter":  # type: ignore
        pass


filter: Filter = Node("filter")  # type: ignore


class Font(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Font":  # type: ignore
        """
        `<font />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Font":  # type: ignore
        """
        `<font />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font)
        """

    def __call__(*args, **kwargs) -> "Font":  # type: ignore
        pass


font: Font = Node("font")  # type: ignore


class FontFace(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "FontFace":  # type: ignore
        """
        `<font-face />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "FontFace":  # type: ignore
        """
        `<font-face />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face)
        """

    def __call__(*args, **kwargs) -> "FontFace":  # type: ignore
        pass


font_face: FontFace = Node("font-face")  # type: ignore


class FontFaceFormat(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-format
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "FontFaceFormat":  # type: ignore
        """
        `<font-face-format />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-format)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "FontFaceFormat":  # type: ignore
        """
        `<font-face-format />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-format)
        """

    def __call__(*args, **kwargs) -> "FontFaceFormat":  # type: ignore
        pass


font_face_format: FontFaceFormat = Node("font-face-format")  # type: ignore


class FontFaceName(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-name
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "FontFaceName":  # type: ignore
        """
        `<font-face-name />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-name)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "FontFaceName":  # type: ignore
        """
        `<font-face-name />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-name)
        """

    def __call__(*args, **kwargs) -> "FontFaceName":  # type: ignore
        pass


font_face_name: FontFaceName = Node("font-face-name")  # type: ignore


class FontFaceSrc(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-src
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "FontFaceSrc":  # type: ignore
        """
        `<font-face-src />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-src)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "FontFaceSrc":  # type: ignore
        """
        `<font-face-src />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-src)
        """

    def __call__(*args, **kwargs) -> "FontFaceSrc":  # type: ignore
        pass


font_face_src: FontFaceSrc = Node("font-face-src")  # type: ignore


class FontFaceUri(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-uri
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "FontFaceUri":  # type: ignore
        """
        `<font-face-uri />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-uri)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "FontFaceUri":  # type: ignore
        """
        `<font-face-uri />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/font-face-uri)
        """

    def __call__(*args, **kwargs) -> "FontFaceUri":  # type: ignore
        pass


font_face_uri: FontFaceUri = Node("font-face-uri")  # type: ignore


class Foreignobject(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject
    """
    @overload
    def __call__(
        self,
        *,
        height = None,
        width = None,
        x = None,
        y = None,
        **attrs,
    ) -> "Foreignobject":  # type: ignore
        """
        `<foreignObject height width x y />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject)
        

        Example:
        ```
        <svg viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
          <style>
            div {
              color: white;
              font: 18px serif;
              height: 100%;
              overflow: auto;
            }
          </style>

          <polygon points="5,5 195,10 185,185 10,195" />

          <!-- Common use case: embed HTML text into SVG -->
          <foreignObject x="20" y="20" width="160" height="160">
            <!--
              In the context of SVG embedded in an HTML document, the XHTML
              namespace could be omitted, but it is mandatory in the
              context of an SVG document
            -->
            <div xmlns="http://www.w3.org/1999/xhtml">
              Lorem ipsum dolor sit amet, consectetur adipiscing elit.
              Sed mollis mollis mi ut ultricies. Nullam magna ipsum,
              porta vel dui convallis, rutrum imperdiet eros. Aliquam
              erat volutpat.
            </div>
          </foreignObject>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Foreignobject":  # type: ignore
        """
        `<foreignObject height width x y />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject)
        

        Example:
        ```
        <svg viewBox="0 0 200 200" xmlns="http://www.w3.org/2000/svg">
          <style>
            div {
              color: white;
              font: 18px serif;
              height: 100%;
              overflow: auto;
            }
          </style>

          <polygon points="5,5 195,10 185,185 10,195" />

          <!-- Common use case: embed HTML text into SVG -->
          <foreignObject x="20" y="20" width="160" height="160">
            <!--
              In the context of SVG embedded in an HTML document, the XHTML
              namespace could be omitted, but it is mandatory in the
              context of an SVG document
            -->
            <div xmlns="http://www.w3.org/1999/xhtml">
              Lorem ipsum dolor sit amet, consectetur adipiscing elit.
              Sed mollis mollis mi ut ultricies. Nullam magna ipsum,
              porta vel dui convallis, rutrum imperdiet eros. Aliquam
              erat volutpat.
            </div>
          </foreignObject>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Foreignobject":  # type: ignore
        pass


foreignObject: Foreignobject = Node("foreignObject")  # type: ignore


class G(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/g
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "G":  # type: ignore
        """
        `<g />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/g)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <!-- Using g to inherit presentation attributes -->
          <g fill="white" stroke="green" stroke-width="5">
            <circle cx="40" cy="40" r="25" />
            <circle cx="60" cy="60" r="25" />
          </g>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "G":  # type: ignore
        """
        `<g />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/g)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <!-- Using g to inherit presentation attributes -->
          <g fill="white" stroke="green" stroke-width="5">
            <circle cx="40" cy="40" r="25" />
            <circle cx="60" cy="60" r="25" />
          </g>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "G":  # type: ignore
        pass


g: G = Node("g")  # type: ignore


class Glyph(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/glyph
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Glyph":  # type: ignore
        """
        `<glyph />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/glyph)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Glyph":  # type: ignore
        """
        `<glyph />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/glyph)
        """

    def __call__(*args, **kwargs) -> "Glyph":  # type: ignore
        pass


glyph: Glyph = Node("glyph")  # type: ignore


class Glyphref(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/glyphRef
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Glyphref":  # type: ignore
        """
        `<glyphRef />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/glyphRef)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Glyphref":  # type: ignore
        """
        `<glyphRef />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/glyphRef)
        """

    def __call__(*args, **kwargs) -> "Glyphref":  # type: ignore
        pass


glyphRef: Glyphref = Node("glyphRef")  # type: ignore


class Hatch(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/hatch
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Hatch":  # type: ignore
        """
        `<hatch />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/hatch)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Hatch":  # type: ignore
        """
        `<hatch />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/hatch)
        """

    def __call__(*args, **kwargs) -> "Hatch":  # type: ignore
        pass


hatch: Hatch = Node("hatch")  # type: ignore


class Hatchpath(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/hatchpath
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Hatchpath":  # type: ignore
        """
        `<hatchpath />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/hatchpath)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Hatchpath":  # type: ignore
        """
        `<hatchpath />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/hatchpath)
        """

    def __call__(*args, **kwargs) -> "Hatchpath":  # type: ignore
        pass


hatchpath: Hatchpath = Node("hatchpath")  # type: ignore


class Hkern(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/hkern
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Hkern":  # type: ignore
        """
        `<hkern />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/hkern)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Hkern":  # type: ignore
        """
        `<hkern />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/hkern)
        """

    def __call__(*args, **kwargs) -> "Hkern":  # type: ignore
        pass


hkern: Hkern = Node("hkern")  # type: ignore


class Image(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/image
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Image":  # type: ignore
        """
        `<image />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/image)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Image":  # type: ignore
        """
        `<image />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/image)
        """

    def __call__(*args, **kwargs) -> "Image":  # type: ignore
        pass


image: Image = Node("image")  # type: ignore


class Line(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/line
    """
    @overload
    def __call__(
        self,
        *,
        x1 = None,
        x2 = None,
        y1 = None,
        y2 = None,
        pathLength = None,
        **attrs,
    ) -> "Line":  # type: ignore
        """
        `<line x1 x2 y1 y2 pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/line)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <line x1="0" y1="80" x2="100" y2="20" stroke="black" />

          <!-- If you do not specify the stroke
               color the line will not be visible -->
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Line":  # type: ignore
        """
        `<line x1 x2 y1 y2 pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/line)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <line x1="0" y1="80" x2="100" y2="20" stroke="black" />

          <!-- If you do not specify the stroke
               color the line will not be visible -->
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Line":  # type: ignore
        pass


line: Line = Node("line")  # type: ignore


class Lineargradient(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/linearGradient
    """
    @overload
    def __call__(
        self,
        *,
        gradientUnits = None,
        gradientTransform = None,
        href = None,
        spreadMethod = None,
        x1 = None,
        x2 = None,
        xlink__href = None,
        y1 = None,
        y2 = None,
        **attrs,
    ) -> "Lineargradient":  # type: ignore
        """
        `<linearGradient gradientUnits gradientTransform href spreadMethod x1 x2 xlink:href y1 y2 />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/linearGradient)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
            <linearGradient id="myGradient" gradientTransform="rotate(90)">
              <stop offset="5%"  stop-color="gold" />
              <stop offset="95%" stop-color="red" />
            </linearGradient>
          </defs>

          <!-- using my linear gradient -->
          <circle cx="5" cy="5" r="4" fill="url('#myGradient')" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Lineargradient":  # type: ignore
        """
        `<linearGradient gradientUnits gradientTransform href spreadMethod x1 x2 xlink:href y1 y2 />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/linearGradient)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
            <linearGradient id="myGradient" gradientTransform="rotate(90)">
              <stop offset="5%"  stop-color="gold" />
              <stop offset="95%" stop-color="red" />
            </linearGradient>
          </defs>

          <!-- using my linear gradient -->
          <circle cx="5" cy="5" r="4" fill="url('#myGradient')" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Lineargradient":  # type: ignore
        pass


linearGradient: Lineargradient = Node("linearGradient")  # type: ignore


class Marker(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/marker
    """
    @overload
    def __call__(
        self,
        *,
        markerHeight = None,
        markerUnits = None,
        markerWidth = None,
        orient = None,
        preserveAspectRatio = None,
        refX = None,
        refY = None,
        viewBox = None,
        **attrs,
    ) -> "Marker":  # type: ignore
        """
        `<marker markerHeight markerUnits markerWidth orient preserveAspectRatio refX refY viewBox />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/marker)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <!-- arrowhead marker definition -->
            <marker id="arrow" viewBox="0 0 10 10" refX="5" refY="5"
                markerWidth="6" markerHeight="6"
                orient="auto-start-reverse">
              <path d="M 0 0 L 10 5 L 0 10 z" />
            </marker>

            <!-- simple dot marker definition -->
            <marker id="dot" viewBox="0 0 10 10" refX="5" refY="5"
                markerWidth="5" markerHeight="5">
              <circle cx="5" cy="5" r="5" fill="red" />
            </marker>
          </defs>

          <!-- Coordinate axes with a arrowhead in both direction -->
          <polyline points="10,10 10,90 90,90" fill="none" stroke="black"
           marker-start="url(#arrow)" marker-end="url(#arrow)" />

          <!-- Data line with polymarkers -->
          <polyline points="15,80 29,50 43,60 57,30 71,40 85,15" fill="none" stroke="grey"
           marker-start="url(#dot)" marker-mid="url(#dot)"  marker-end="url(#dot)" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Marker":  # type: ignore
        """
        `<marker markerHeight markerUnits markerWidth orient preserveAspectRatio refX refY viewBox />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/marker)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <!-- arrowhead marker definition -->
            <marker id="arrow" viewBox="0 0 10 10" refX="5" refY="5"
                markerWidth="6" markerHeight="6"
                orient="auto-start-reverse">
              <path d="M 0 0 L 10 5 L 0 10 z" />
            </marker>

            <!-- simple dot marker definition -->
            <marker id="dot" viewBox="0 0 10 10" refX="5" refY="5"
                markerWidth="5" markerHeight="5">
              <circle cx="5" cy="5" r="5" fill="red" />
            </marker>
          </defs>

          <!-- Coordinate axes with a arrowhead in both direction -->
          <polyline points="10,10 10,90 90,90" fill="none" stroke="black"
           marker-start="url(#arrow)" marker-end="url(#arrow)" />

          <!-- Data line with polymarkers -->
          <polyline points="15,80 29,50 43,60 57,30 71,40 85,15" fill="none" stroke="grey"
           marker-start="url(#dot)" marker-mid="url(#dot)"  marker-end="url(#dot)" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Marker":  # type: ignore
        pass


marker: Marker = Node("marker")  # type: ignore


class Mask(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mask
    """
    @overload
    def __call__(
        self,
        *,
        height = None,
        maskContentUnits = None,
        maskUnits = None,
        x = None,
        y = None,
        width = None,
        **attrs,
    ) -> "Mask":  # type: ignore
        """
        `<mask height maskContentUnits maskUnits x y width />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mask)
        

        Example:
        ```
        <svg viewBox="-10 -10 120 120">
          <mask id="myMask">
            <!-- Everything under a white pixel will be visible -->
            <rect x="0" y="0" width="100" height="100" fill="white" />

            <!-- Everything under a black pixel will be invisible -->
            <path d="M10,35 A20,20,0,0,1,50,35 A20,20,0,0,1,90,35 Q90,65,50,95 Q10,65,10,35 Z" fill="black" />
          </mask>

          <polygon points="-10,110 110,110 110,-10" fill="orange" />

          <!-- with this mask applied, we "punch" a heart shape hole into the circle -->
          <circle cx="50" cy="50" r="50" mask="url(#myMask)" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Mask":  # type: ignore
        """
        `<mask height maskContentUnits maskUnits x y width />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mask)
        

        Example:
        ```
        <svg viewBox="-10 -10 120 120">
          <mask id="myMask">
            <!-- Everything under a white pixel will be visible -->
            <rect x="0" y="0" width="100" height="100" fill="white" />

            <!-- Everything under a black pixel will be invisible -->
            <path d="M10,35 A20,20,0,0,1,50,35 A20,20,0,0,1,90,35 Q90,65,50,95 Q10,65,10,35 Z" fill="black" />
          </mask>

          <polygon points="-10,110 110,110 110,-10" fill="orange" />

          <!-- with this mask applied, we "punch" a heart shape hole into the circle -->
          <circle cx="50" cy="50" r="50" mask="url(#myMask)" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Mask":  # type: ignore
        pass


mask: Mask = Node("mask")  # type: ignore


class Metadata(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/metadata
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Metadata":  # type: ignore
        """
        `<metadata />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/metadata)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Metadata":  # type: ignore
        """
        `<metadata />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/metadata)
        """

    def __call__(*args, **kwargs) -> "Metadata":  # type: ignore
        pass


metadata: Metadata = Node("metadata")  # type: ignore


class MissingGlyph(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/missing-glyph
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "MissingGlyph":  # type: ignore
        """
        `<missing-glyph />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/missing-glyph)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "MissingGlyph":  # type: ignore
        """
        `<missing-glyph />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/missing-glyph)
        """

    def __call__(*args, **kwargs) -> "MissingGlyph":  # type: ignore
        pass


missing_glyph: MissingGlyph = Node("missing-glyph")  # type: ignore


class Mpath(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mpath
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Mpath":  # type: ignore
        """
        `<mpath />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mpath)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Mpath":  # type: ignore
        """
        `<mpath />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/mpath)
        """

    def __call__(*args, **kwargs) -> "Mpath":  # type: ignore
        pass


mpath: Mpath = Node("mpath")  # type: ignore


class Path(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/path
    """
    @overload
    def __call__(
        self,
        *,
        d = None,
        pathLength = None,
        **attrs,
    ) -> "Path":  # type: ignore
        """
        `<path d pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/path)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <path d="M 10,30
                   A 20,20 0,0,1 50,30
                   A 20,20 0,0,1 90,30
                   Q 90,60 50,90
                   Q 10,60 10,30 z"/>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Path":  # type: ignore
        """
        `<path d pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/path)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">
          <path d="M 10,30
                   A 20,20 0,0,1 50,30
                   A 20,20 0,0,1 90,30
                   Q 90,60 50,90
                   Q 10,60 10,30 z"/>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Path":  # type: ignore
        pass


path: Path = Node("path")  # type: ignore


class Pattern(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/pattern
    """
    @overload
    def __call__(
        self,
        *,
        height = None,
        href = None,
        patternContentUnits = None,
        patternTransform = None,
        patternUnits = None,
        preserveAspectRatio = None,
        viewBox = None,
        width = None,
        x = None,
        xlink__href = None,
        y = None,
        **attrs,
    ) -> "Pattern":  # type: ignore
        """
        `<pattern height href patternContentUnits patternTransform patternUnits preserveAspectRatio viewBox width x xlink:href y />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/pattern)
        

        Example:
        ```
        <svg viewBox="0 0 230 100" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <pattern id="star" viewBox="0,0,10,10" width="10%" height="10%">
              <polygon points="0,0 2,5 0,10 5,8 10,10 8,5 10,0 5,2"/>
            </pattern>
          </defs>

          <circle cx="50"  cy="50" r="50" fill="url(#star)"/>
          <circle cx="180" cy="50" r="40" fill="none" stroke-width="20" stroke="url(#star)"/>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Pattern":  # type: ignore
        """
        `<pattern height href patternContentUnits patternTransform patternUnits preserveAspectRatio viewBox width x xlink:href y />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/pattern)
        

        Example:
        ```
        <svg viewBox="0 0 230 100" xmlns="http://www.w3.org/2000/svg">
          <defs>
            <pattern id="star" viewBox="0,0,10,10" width="10%" height="10%">
              <polygon points="0,0 2,5 0,10 5,8 10,10 8,5 10,0 5,2"/>
            </pattern>
          </defs>

          <circle cx="50"  cy="50" r="50" fill="url(#star)"/>
          <circle cx="180" cy="50" r="40" fill="none" stroke-width="20" stroke="url(#star)"/>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Pattern":  # type: ignore
        pass


pattern: Pattern = Node("pattern")  # type: ignore


class Polygon(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polygon
    """
    @overload
    def __call__(
        self,
        *,
        points = None,
        pathLength = None,
        **attrs,
    ) -> "Polygon":  # type: ignore
        """
        `<polygon points pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polygon)
        

        Example:
        ```
        <svg viewBox="0 0 200 100" xmlns="http://www.w3.org/2000/svg">
          <!-- Example of a polygon with the default fill -->
          <polygon points="0,100 50,25 50,75 100,0" />

          <!-- Example of the same polygon shape with stroke and no fill -->
          <polygon points="100,100 150,25 150,75 200,0"
                    fill="none" stroke="black" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Polygon":  # type: ignore
        """
        `<polygon points pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polygon)
        

        Example:
        ```
        <svg viewBox="0 0 200 100" xmlns="http://www.w3.org/2000/svg">
          <!-- Example of a polygon with the default fill -->
          <polygon points="0,100 50,25 50,75 100,0" />

          <!-- Example of the same polygon shape with stroke and no fill -->
          <polygon points="100,100 150,25 150,75 200,0"
                    fill="none" stroke="black" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Polygon":  # type: ignore
        pass


polygon: Polygon = Node("polygon")  # type: ignore


class Polyline(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline
    """
    @overload
    def __call__(
        self,
        *,
        points = None,
        pathLength = None,
        **attrs,
    ) -> "Polyline":  # type: ignore
        """
        `<polyline points pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline)
        

        Example:
        ```
        <svg viewBox="0 0 200 100" xmlns="http://www.w3.org/2000/svg">
          <!-- Example of a polyline with the default fill -->
          <polyline points="0,100 50,25 50,75 100,0" />

          <!-- Example of the same polyline shape with stroke and no fill -->
          <polyline points="100,100 150,25 150,75 200,0"
                    fill="none" stroke="black" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Polyline":  # type: ignore
        """
        `<polyline points pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/polyline)
        

        Example:
        ```
        <svg viewBox="0 0 200 100" xmlns="http://www.w3.org/2000/svg">
          <!-- Example of a polyline with the default fill -->
          <polyline points="0,100 50,25 50,75 100,0" />

          <!-- Example of the same polyline shape with stroke and no fill -->
          <polyline points="100,100 150,25 150,75 200,0"
                    fill="none" stroke="black" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Polyline":  # type: ignore
        pass


polyline: Polyline = Node("polyline")  # type: ignore


class Radialgradient(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/radialGradient
    """
    @overload
    def __call__(
        self,
        *,
        cx = None,
        cy = None,
        fr = None,
        fx = None,
        fy = None,
        gradientUnits = None,
        gradientTransform = None,
        href = None,
        r = None,
        spreadMethod = None,
        xlink__href = None,
        **attrs,
    ) -> "Radialgradient":  # type: ignore
        """
        `<radialGradient cx cy fr fx fy gradientUnits gradientTransform href r spreadMethod xlink:href />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/radialGradient)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
            <radialGradient id="myGradient">
              <stop offset="10%" stop-color="gold" />
              <stop offset="95%" stop-color="red" />
            </radialGradient>
          </defs>

          <!-- using my radial gradient -->
          <circle cx="5" cy="5" r="4" fill="url('#myGradient')" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Radialgradient":  # type: ignore
        """
        `<radialGradient cx cy fr fx fy gradientUnits gradientTransform href r spreadMethod xlink:href />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/radialGradient)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
            <radialGradient id="myGradient">
              <stop offset="10%" stop-color="gold" />
              <stop offset="95%" stop-color="red" />
            </radialGradient>
          </defs>

          <!-- using my radial gradient -->
          <circle cx="5" cy="5" r="4" fill="url('#myGradient')" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Radialgradient":  # type: ignore
        pass


radialGradient: Radialgradient = Node("radialGradient")  # type: ignore


class Rect(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/rect
    """
    @overload
    def __call__(
        self,
        *,
        x = None,
        y = None,
        width = None,
        height = None,
        rx = None,
        ry = None,
        pathLength = None,
        **attrs,
    ) -> "Rect":  # type: ignore
        """
        `<rect x y width height rx ry pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/rect)
        

        Example:
        ```
        <svg viewBox="0 0 220 100" xmlns="http://www.w3.org/2000/svg">
          <!-- Simple rectangle -->
          <rect width="100" height="100" />

          <!-- Rounded corner rectangle -->
          <rect x="120" width="100" height="100" rx="15" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Rect":  # type: ignore
        """
        `<rect x y width height rx ry pathLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/rect)
        

        Example:
        ```
        <svg viewBox="0 0 220 100" xmlns="http://www.w3.org/2000/svg">
          <!-- Simple rectangle -->
          <rect width="100" height="100" />

          <!-- Rounded corner rectangle -->
          <rect x="120" width="100" height="100" rx="15" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Rect":  # type: ignore
        pass


rect: Rect = Node("rect")  # type: ignore


class Script(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script
    """
    @overload
    def __call__(
        self,
        *,
        href = None,
        type = None,
        xlink__href = None,
        **attrs,
    ) -> "Script":  # type: ignore
        """
        `<script href type xlink:href />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Script":  # type: ignore
        """
        `<script href type xlink:href />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/script)
        """

    def __call__(*args, **kwargs) -> "Script":  # type: ignore
        pass


script: Script = Node("script")  # type: ignore


class Set(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/set
    """
    @overload
    def __call__(
        self,
        *,
        to = None,
        **attrs,
    ) -> "Set":  # type: ignore
        """
        `<set to />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/set)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg">
          <style>
            rect { cursor: pointer }
            .round { rx: 5px; fill: green; }
          </style>

          <rect id="me" width="10" height="10">
            <set attributeName="class" to="round" begin="me.click" dur="2s" />
          </rect>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Set":  # type: ignore
        """
        `<set to />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/set)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg">
          <style>
            rect { cursor: pointer }
            .round { rx: 5px; fill: green; }
          </style>

          <rect id="me" width="10" height="10">
            <set attributeName="class" to="round" begin="me.click" dur="2s" />
          </rect>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Set":  # type: ignore
        pass


set: Set = Node("set")  # type: ignore


class Stop(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/stop
    """
    @overload
    def __call__(
        self,
        *,
        offset = None,
        stopcolor = None,
        stopopacity = None,
        **attrs,
    ) -> "Stop":  # type: ignore
        """
        `<stop offset stop-color stop-opacity />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/stop)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
            <linearGradient id="myGradient" gradientTransform="rotate(90)">
              <stop offset="5%"  stop-color="gold" />
              <stop offset="95%" stop-color="red" />
            </linearGradient>
          </defs>

          <!-- using my linear gradient -->
          <circle cx="5" cy="5" r="4" fill="url('#myGradient')" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Stop":  # type: ignore
        """
        `<stop offset stop-color stop-opacity />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/stop)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg"
             xmlns:xlink="http://www.w3.org/1999/xlink">
          <defs>
            <linearGradient id="myGradient" gradientTransform="rotate(90)">
              <stop offset="5%"  stop-color="gold" />
              <stop offset="95%" stop-color="red" />
            </linearGradient>
          </defs>

          <!-- using my linear gradient -->
          <circle cx="5" cy="5" r="4" fill="url('#myGradient')" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Stop":  # type: ignore
        pass


stop: Stop = Node("stop")  # type: ignore


class Style(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/style
    """
    @overload
    def __call__(
        self,
        *,
        type = None,
        media = None,
        title = None,
        **attrs,
    ) -> "Style":  # type: ignore
        """
        `<style type media title />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/style)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg">
          <style>
            circle {
              fill: gold;
              stroke: maroon;
              stroke-width: 2px;
            }
          </style>

          <circle cx="5" cy="5" r="4" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Style":  # type: ignore
        """
        `<style type media title />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/style)
        

        Example:
        ```
        <svg viewBox="0 0 10 10" xmlns="http://www.w3.org/2000/svg">
          <style>
            circle {
              fill: gold;
              stroke: maroon;
              stroke-width: 2px;
            }
          </style>

          <circle cx="5" cy="5" r="4" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Style":  # type: ignore
        pass


style: Style = Node("style")  # type: ignore


class Svg(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg
    """
    @overload
    def __call__(
        self,
        *,
        baseProfile = None,
        contentScriptType = None,
        contentStyleType = None,
        height = None,
        preserveAspectRatio = None,
        version = None,
        viewBox = None,
        width = None,
        x = None,
        y = None,
        **attrs,
    ) -> "Svg":  # type: ignore
        """
        `<svg baseProfile contentScriptType contentStyleType height preserveAspectRatio version viewBox width x y />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg)
        

        Example:
        ```
        <svg viewBox="0 0 300 100" xmlns="http://www.w3.org/2000/svg" stroke="red" fill="grey">
          <circle cx="50" cy="50" r="40" />
          <circle cx="150" cy="50" r="4" />

          <svg viewBox="0 0 10 10" x="200" width="100">
            <circle cx="5" cy="5" r="4" />
          </svg>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Svg":  # type: ignore
        """
        `<svg baseProfile contentScriptType contentStyleType height preserveAspectRatio version viewBox width x y />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/svg)
        

        Example:
        ```
        <svg viewBox="0 0 300 100" xmlns="http://www.w3.org/2000/svg" stroke="red" fill="grey">
          <circle cx="50" cy="50" r="40" />
          <circle cx="150" cy="50" r="4" />

          <svg viewBox="0 0 10 10" x="200" width="100">
            <circle cx="5" cy="5" r="4" />
          </svg>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Svg":  # type: ignore
        pass


svg: Svg = Node("svg")  # type: ignore


class Switch(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/switch
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Switch":  # type: ignore
        """
        `<switch />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/switch)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Switch":  # type: ignore
        """
        `<switch />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/switch)
        """

    def __call__(*args, **kwargs) -> "Switch":  # type: ignore
        pass


switch: Switch = Node("switch")  # type: ignore


class Symbol(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/symbol
    """
    @overload
    def __call__(
        self,
        *,
        height = None,
        preserveAspectRatio = None,
        refX = None,
        refY = None,
        viewBox = None,
        width = None,
        x = None,
        y = None,
        **attrs,
    ) -> "Symbol":  # type: ignore
        """
        `<symbol height preserveAspectRatio refX refY viewBox width x y />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/symbol)
        

        Example:
        ```
        <svg viewBox="0 0 80 20" xmlns="http://www.w3.org/2000/svg">
          <!-- Our symbol in its own coordinate system -->
          <symbol id="myDot" width="10" height="10" viewBox="0 0 2 2">
            <circle cx="1" cy="1" r="1" />
          </symbol>

           <!-- A grid to materialize our symbol positioning -->
          <path d="M0,10 h80 M10,0 v20 M25,0 v20 M40,0 v20 M55,0 v20 M70,0 v20" fill="none" stroke="pink" />

          <!-- All instances of our symbol -->
          <use href="#myDot" x="5"  y="5" style="opacity:1.0" />
          <use href="#myDot" x="20" y="5" style="opacity:0.8" />
          <use href="#myDot" x="35" y="5" style="opacity:0.6" />
          <use href="#myDot" x="50" y="5" style="opacity:0.4" />
          <use href="#myDot" x="65" y="5" style="opacity:0.2" />
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Symbol":  # type: ignore
        """
        `<symbol height preserveAspectRatio refX refY viewBox width x y />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/symbol)
        

        Example:
        ```
        <svg viewBox="0 0 80 20" xmlns="http://www.w3.org/2000/svg">
          <!-- Our symbol in its own coordinate system -->
          <symbol id="myDot" width="10" height="10" viewBox="0 0 2 2">
            <circle cx="1" cy="1" r="1" />
          </symbol>

           <!-- A grid to materialize our symbol positioning -->
          <path d="M0,10 h80 M10,0 v20 M25,0 v20 M40,0 v20 M55,0 v20 M70,0 v20" fill="none" stroke="pink" />

          <!-- All instances of our symbol -->
          <use href="#myDot" x="5"  y="5" style="opacity:1.0" />
          <use href="#myDot" x="20" y="5" style="opacity:0.8" />
          <use href="#myDot" x="35" y="5" style="opacity:0.6" />
          <use href="#myDot" x="50" y="5" style="opacity:0.4" />
          <use href="#myDot" x="65" y="5" style="opacity:0.2" />
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Symbol":  # type: ignore
        pass


symbol: Symbol = Node("symbol")  # type: ignore


class Text(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/text
    """
    @overload
    def __call__(
        self,
        *,
        x = None,
        y = None,
        dx = None,
        dy = None,
        rotate = None,
        lengthAdjust = None,
        textLength = None,
        **attrs,
    ) -> "Text":  # type: ignore
        """
        `<text x y dx dy rotate lengthAdjust textLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/text)
        

        Example:
        ```
        <svg viewBox="0 0 240 80" xmlns="http://www.w3.org/2000/svg">
          <style>
            .small { font: italic 13px sans-serif; }
            .heavy { font: bold 30px sans-serif; }

            /* Note that the color of the text is set with the    *
             * fill property, the color property is for HTML only */
            .Rrrrr { font: italic 40px serif; fill: red; }
          </style>

          <text x="20" y="35" class="small">My</text>
          <text x="40" y="35" class="heavy">cat</text>
          <text x="55" y="55" class="small">is</text>
          <text x="65" y="55" class="Rrrrr">Grumpy!</text>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Text":  # type: ignore
        """
        `<text x y dx dy rotate lengthAdjust textLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/text)
        

        Example:
        ```
        <svg viewBox="0 0 240 80" xmlns="http://www.w3.org/2000/svg">
          <style>
            .small { font: italic 13px sans-serif; }
            .heavy { font: bold 30px sans-serif; }

            /* Note that the color of the text is set with the    *
             * fill property, the color property is for HTML only */
            .Rrrrr { font: italic 40px serif; fill: red; }
          </style>

          <text x="20" y="35" class="small">My</text>
          <text x="40" y="35" class="heavy">cat</text>
          <text x="55" y="55" class="small">is</text>
          <text x="65" y="55" class="Rrrrr">Grumpy!</text>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Text":  # type: ignore
        pass


text: Text = Node("text")  # type: ignore


class Textpath(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/textPath
    """
    @overload
    def __call__(
        self,
        *,
        href = None,
        lengthAdjust = None,
        method = None,
        path = None,
        side = None,
        spacing = None,
        startOffset = None,
        textLength = None,
        **attrs,
    ) -> "Textpath":  # type: ignore
        """
        `<textPath href lengthAdjust method path side spacing startOffset textLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/textPath)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">

          <!-- to hide the path, it is usually wrapped in a <defs> element -->
          <!-- <defs> -->
          <path id="MyPath" fill="none" stroke="red"
                d="M10,90 Q90,90 90,45 Q90,10 50,10 Q10,10 10,40 Q10,70 45,70 Q70,70 75,50" />
          <!-- </defs> -->

          <text>
            <textPath href="#MyPath">
              Quick brown fox jumps over the lazy dog.
            </textPath>
          </text>

        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Textpath":  # type: ignore
        """
        `<textPath href lengthAdjust method path side spacing startOffset textLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/textPath)
        

        Example:
        ```
        <svg viewBox="0 0 100 100" xmlns="http://www.w3.org/2000/svg">

          <!-- to hide the path, it is usually wrapped in a <defs> element -->
          <!-- <defs> -->
          <path id="MyPath" fill="none" stroke="red"
                d="M10,90 Q90,90 90,45 Q90,10 50,10 Q10,10 10,40 Q10,70 45,70 Q70,70 75,50" />
          <!-- </defs> -->

          <text>
            <textPath href="#MyPath">
              Quick brown fox jumps over the lazy dog.
            </textPath>
          </text>

        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Textpath":  # type: ignore
        pass


textPath: Textpath = Node("textPath")  # type: ignore


class Title(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Title":  # type: ignore
        """
        `<title />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title)
        

        Example:
        ```
        <svg viewBox="0 0 20 10" xmlns="http://www.w3.org/2000/svg">
          <circle cx="5" cy="5" r="4">
            <title>I'm a circle</title>
          </circle>

          <rect x="11" y="1" width="8" height="8">
            <title>I'm a square</title>
          </rect>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Title":  # type: ignore
        """
        `<title />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/title)
        

        Example:
        ```
        <svg viewBox="0 0 20 10" xmlns="http://www.w3.org/2000/svg">
          <circle cx="5" cy="5" r="4">
            <title>I'm a circle</title>
          </circle>

          <rect x="11" y="1" width="8" height="8">
            <title>I'm a square</title>
          </rect>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Title":  # type: ignore
        pass


title: Title = Node("title")  # type: ignore


class Tref(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tref
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Tref":  # type: ignore
        """
        `<tref />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tref)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Tref":  # type: ignore
        """
        `<tref />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tref)
        """

    def __call__(*args, **kwargs) -> "Tref":  # type: ignore
        pass


tref: Tref = Node("tref")  # type: ignore


class Tspan(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tspan
    """
    @overload
    def __call__(
        self,
        *,
        x = None,
        y = None,
        dx = None,
        dy = None,
        rotate = None,
        lengthAdjust = None,
        textLength = None,
        **attrs,
    ) -> "Tspan":  # type: ignore
        """
        `<tspan x y dx dy rotate lengthAdjust textLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tspan)
        

        Example:
        ```
        <svg viewBox="0 0 240 40" xmlns="http://www.w3.org/2000/svg">
          <style>
            text  { font: italic 12px serif; }
            tspan { font: bold 10px sans-serif; fill: red; }
          </style>

          <text x="10" y="30" class="small">
            You are
            <tspan>not</tspan>
            a banana!
          </text>
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Tspan":  # type: ignore
        """
        `<tspan x y dx dy rotate lengthAdjust textLength />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/tspan)
        

        Example:
        ```
        <svg viewBox="0 0 240 40" xmlns="http://www.w3.org/2000/svg">
          <style>
            text  { font: italic 12px serif; }
            tspan { font: bold 10px sans-serif; fill: red; }
          </style>

          <text x="10" y="30" class="small">
            You are
            <tspan>not</tspan>
            a banana!
          </text>
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Tspan":  # type: ignore
        pass


tspan: Tspan = Node("tspan")  # type: ignore


class Use(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/use
    """
    @overload
    def __call__(
        self,
        *,
        href = None,
        xlink__href = None,
        x = None,
        y = None,
        width = None,
        height = None,
        **attrs,
    ) -> "Use":  # type: ignore
        """
        `<use href xlink:href x y width height />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/use)
        

        Example:
        ```
        <svg viewBox="0 0 30 10" xmlns="http://www.w3.org/2000/svg">
          <circle id="myCircle" cx="5" cy="5" r="4" stroke="blue"/>
          <use href="#myCircle" x="10" fill="blue"/>
          <use href="#myCircle" x="20" fill="white" stroke="red"/>
          <!--
        stroke="red" will be ignored here, as stroke was already set on myCircle.
        Most attributes (except for x, y, width, height and (xlink:)href)
        do not override those set in the ancestor.
        That's why the circles have different x positions, but the same stroke value.
          -->
        </svg>
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Use":  # type: ignore
        """
        `<use href xlink:href x y width height />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/use)
        

        Example:
        ```
        <svg viewBox="0 0 30 10" xmlns="http://www.w3.org/2000/svg">
          <circle id="myCircle" cx="5" cy="5" r="4" stroke="blue"/>
          <use href="#myCircle" x="10" fill="blue"/>
          <use href="#myCircle" x="20" fill="white" stroke="red"/>
          <!--
        stroke="red" will be ignored here, as stroke was already set on myCircle.
        Most attributes (except for x, y, width, height and (xlink:)href)
        do not override those set in the ancestor.
        That's why the circles have different x positions, but the same stroke value.
          -->
        </svg>
        ```
        """

    def __call__(*args, **kwargs) -> "Use":  # type: ignore
        pass


use: Use = Node("use")  # type: ignore


class View(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "View":  # type: ignore
        """
        `<view />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view)
        

        Example:
        ```
        <img src="example.svg" alt="three circles" width="300" height="100" />
        <br />
        <img src="example.svg#three" alt="blue circle" width="100" height="100" />
        ```
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "View":  # type: ignore
        """
        `<view />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/view)
        

        Example:
        ```
        <img src="example.svg" alt="three circles" width="300" height="100" />
        <br />
        <img src="example.svg#three" alt="blue circle" width="100" height="100" />
        ```
        """

    def __call__(*args, **kwargs) -> "View":  # type: ignore
        pass


view: View = Node("view")  # type: ignore


class Vkern(Node):
    """
    https://developer.mozilla.org/en-US/docs/Web/SVG/Element/vkern
    """
    @overload
    def __call__(
        self,
        
        **attrs,
    ) -> "Vkern":  # type: ignore
        """
        `<vkern />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/vkern)
        """
        pass

    @overload
    def __call__(
        self,
        *children: Union[Node, str, Generator[Union[Node, str, None], None, None], None],
    ) -> "Vkern":  # type: ignore
        """
        `<vkern />` [(docs)](https://developer.mozilla.org/en-US/docs/Web/SVG/Element/vkern)
        """

    def __call__(*args, **kwargs) -> "Vkern":  # type: ignore
        pass


vkern: Vkern = Node("vkern")  # type: ignore


